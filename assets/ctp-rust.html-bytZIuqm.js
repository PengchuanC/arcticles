import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as p}from"./app-H1lq-Ewb.js";const e={},t=p(`<h1 id="ctp" tabindex="-1"><a class="header-anchor" href="#ctp" aria-hidden="true">#</a> CTP</h1><h2 id="官方介绍" tabindex="-1"><a class="header-anchor" href="#官方介绍" aria-hidden="true">#</a> 官方介绍</h2><p>上期技术综合交易平台（Comprehensive Transaction Platform，简称CTP）系列产品为期货经纪公司提供国内期货与证券及衍生品的交易、风控、结算等业务的解决方案。</p><h2 id="ctp接入" tabindex="-1"><a class="header-anchor" href="#ctp接入" aria-hidden="true">#</a> CTP接入</h2><p>CTP的接入需要使用官方提供的API接口，基于C++开发，第三方实现了基于CPython的接口，本文试图实现基于C语言FFI的接口，来探索Rust语言的接入方式。</p><h1 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h1><p>Rust和C语言能够互相调用的关键在于它们在底层系统接口、内存模型、函数调用约定等方面的高度兼容性。Rust的FFI机制则提供了一个友好的编程接口,使得开发人员可以无缝地在两种语言之间切换。<br> 概括来讲，实现以下特性就可以保证Rust和C语言的代码安全调用：</p><ul><li>Rust提供了一个专门的FFI机制,允许Rust代码直接调用C语言编写的函数。反之,C语言也可以通过FFI调用Rust函数。</li><li>Rust和C语言的基本数据类型(如整型、浮点型等)在内存布局上是兼容的。Rust的FFI机制能够自动进行这些类型之间的转换。</li><li>Rust的所有权和借用规则确保了内存安全。当Rust调用C函数时,会自动处理好内存的所有权转移。C调用Rust时,Rust也能正确地管理内存。</li></ul><p>CTP开发使用的是C++语言,而Rust是基于C语言的FFI机制来实现的。因此Rust是无法直接调用CTP的相关接口，需要使用C语言来对CTP接口进行一定的封装，来保证内存布局一致、数据类型相同。</p><h1 id="rust接入ctp" tabindex="-1"><a class="header-anchor" href="#rust接入ctp" aria-hidden="true">#</a> Rust接入CTP</h1><h2 id="用c封装ctp" tabindex="-1"><a class="header-anchor" href="#用c封装ctp" aria-hidden="true">#</a> 用C封装CTP</h2><p>CTP为行情和交易分别提供了两个类,一个叫做<code>Api</code>,一个叫做<code>Spi</code>,此处以行情接口为例。</p><p><code>CThostFtdcMdApi</code>类由CTP官方实现，主要控制请求操作，诸如连接柜台、登录、订阅行情、取消订阅等。<br><code>CThostFtdcMdSpi</code>类CTP只提供了一个基类,用于实现回调函数,具体接口由用户实现,来响应各种用户请求的回调事件。</p><p>C语言没有类这个概念,因此我们需要将这两个类包装为指针,并提供一个结构体来封装这两个指针,方便Rust调用。</p><h3 id="实现api" tabindex="-1"><a class="header-anchor" href="#实现api" aria-hidden="true">#</a> 实现API</h3><p>通过以下代码,我们就能将Api包装为一个C的结构体。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">__BRIDGE_H__</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__BRIDGE_H__</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;lib/ThostFtdcMdApi.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;ThostFtdcUserApiStruct.h&quot;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">__cplusplus</span></span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span>
<span class="token punctuation">{</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

    <span class="token keyword">struct</span> <span class="token class-name">CMarketApi</span>
    <span class="token punctuation">{</span>
        CThostFtdcMdApi <span class="token operator">*</span>api<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">__cplusplus</span></span>
<span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但这只是个基础的结构体,我们还需要将CThostFtdcMdApi的功能实现到Rust中,本次我们举例如何创建api和进行柜台连接请求。<br> 伪代码如下:</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">__BRIDGE_H__</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__BRIDGE_H__</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;lib/ThostFtdcMdApi.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;ThostFtdcUserApiStruct.h&quot;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">__cplusplus</span></span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span>
<span class="token punctuation">{</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

    <span class="token keyword">struct</span> <span class="token class-name">CMarketApi</span>
    <span class="token punctuation">{</span>
        CThostFtdcMdApi <span class="token operator">*</span>api<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">create_api</span><span class="token punctuation">(</span>CMarketApi <span class="token operator">*</span>cmapi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cmapi<span class="token operator">-&gt;</span>api <span class="token operator">=</span> CThostFtdcMdApi<span class="token operator">::</span><span class="token function">CreateFtdcMdApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token function">connect</span><span class="token punctuation">(</span>CMarketApi <span class="token operator">*</span>cmapi<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>broker<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>user<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>pwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 此处实际需要先注册spi</span>
        CThostFtdcReqUserLoginField field <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        std<span class="token operator">::</span><span class="token function">strcpy</span><span class="token punctuation">(</span>field<span class="token punctuation">.</span>BrokerID<span class="token punctuation">,</span> broker<span class="token punctuation">)</span><span class="token punctuation">;</span>
        std<span class="token operator">::</span><span class="token function">strcpy</span><span class="token punctuation">(</span>field<span class="token punctuation">.</span>UserID<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        std<span class="token operator">::</span><span class="token function">strcpy</span><span class="token punctuation">(</span>field<span class="token punctuation">.</span>Password<span class="token punctuation">,</span> pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">auto</span> ret <span class="token operator">=</span> api<span class="token operator">-&gt;</span><span class="token function">ReqUserLogin</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>field<span class="token punctuation">,</span> requestID<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">__cplusplus</span></span>
<span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spi实现" tabindex="-1"><a class="header-anchor" href="#spi实现" aria-hidden="true">#</a> SPI实现</h3><p>spi的实现相比api会复杂很多,毕竟api只需要调用,spi需要自己实现回调函数。<br> 思路是实现一个spi的继承类<code>A</code>,用来从rust中注册一些回调函数到<code>A</code>中,<br> 当ctp调用回调函数时，我们在ctp定义的回调函数中调用<code>A</code>上面注册的相应函数,<br> 伪代码如下:</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// spi extend</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">__SPI_H__</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__SPI_H__</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;functional&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;lib/ThostFtdcMdApi.h&quot;</span></span>

using FrontConnectedCallback <span class="token operator">=</span> std<span class="token operator">::</span>function<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
using LoggedInCallBack <span class="token operator">=</span> std<span class="token operator">::</span>function<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
using DepthMarketCallBack <span class="token operator">=</span> std<span class="token operator">::</span>function<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token punctuation">(</span>CThostFtdcDepthMarketDataField <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

class Spi <span class="token operator">:</span> public CThostFtdcMdSpi
<span class="token punctuation">{</span>
private<span class="token operator">:</span>
    FrontConnectedCallback onFrontConnected<span class="token punctuation">;</span>
    LoggedInCallBack onLoggedIn<span class="token punctuation">;</span>
    DepthMarketCallBack onDepthMarketData<span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">OnRspError</span><span class="token punctuation">(</span>CThostFtdcRspInfoField <span class="token operator">*</span>pRspInfo<span class="token punctuation">,</span> <span class="token keyword">int</span> nRequestID<span class="token punctuation">,</span> bool bIsLast<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">OnFrontConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">OnFrontDisconnected</span><span class="token punctuation">(</span><span class="token keyword">int</span> nReason<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">OnRspUserLogin</span><span class="token punctuation">(</span>CThostFtdcRspUserLoginField <span class="token operator">*</span>pRspUserLogin<span class="token punctuation">,</span> CThostFtdcRspInfoField <span class="token operator">*</span>pRspInfo<span class="token punctuation">,</span> <span class="token keyword">int</span> nRequestID<span class="token punctuation">,</span> bool bIsLast<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">OnRspSubMarketData</span><span class="token punctuation">(</span>CThostFtdcSpecificInstrumentField <span class="token operator">*</span>pSpecificInstrument<span class="token punctuation">,</span> CThostFtdcRspInfoField <span class="token operator">*</span>pRspInfo<span class="token punctuation">,</span> <span class="token keyword">int</span> nRequestID<span class="token punctuation">,</span> bool bIsLast<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">OnMarketData</span><span class="token punctuation">(</span>CThostFtdcMarketDataField <span class="token operator">*</span>pMarketData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">OnRtnDepthMarketData</span><span class="token punctuation">(</span>CThostFtdcDepthMarketDataField <span class="token operator">*</span>pDepthMarketData<span class="token punctuation">)</span><span class="token punctuation">;</span>

public<span class="token operator">:</span>
    <span class="token function">Spi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">Spi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">registerOnFrontConnected</span><span class="token punctuation">(</span><span class="token keyword">const</span> FrontConnectedCallback <span class="token operator">&amp;</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">registerOnLoggedIn</span><span class="token punctuation">(</span><span class="token keyword">const</span> LoggedInCallBack <span class="token operator">&amp;</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">registerOnDepthMarketData</span><span class="token punctuation">(</span><span class="token keyword">const</span> DepthMarketCallBack <span class="token operator">&amp;</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">OnRspError</span><span class="token punctuation">(</span>CThostFtdcRspInfoField <span class="token operator">*</span>pRspInfo<span class="token punctuation">,</span> <span class="token keyword">int</span> nRequestID<span class="token punctuation">,</span> bool bIsLast<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Spi::OnError: &quot;</span> <span class="token operator">&lt;&lt;</span> pRspInfo<span class="token operator">-&gt;</span>ErrorMsg <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">OnFrontConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">onFrontConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">OnFrontDisconnected</span><span class="token punctuation">(</span><span class="token keyword">int</span> reason<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;OnFrontDisconnected: &quot;</span> <span class="token operator">&lt;&lt;</span> reason <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">OnRspUserLogin</span><span class="token punctuation">(</span>CThostFtdcRspUserLoginField <span class="token operator">*</span>pRspUserLogin<span class="token punctuation">,</span> CThostFtdcRspInfoField <span class="token operator">*</span>pRspInfo<span class="token punctuation">,</span> <span class="token keyword">int</span> nRequestID<span class="token punctuation">,</span> bool bIsLast<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">onLoggedIn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>pRspInfo<span class="token operator">-&gt;</span>ErrorID<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">OnRspSubMarketData</span><span class="token punctuation">(</span>CThostFtdcSpecificInstrumentField <span class="token operator">*</span>pSpecificInstrument<span class="token punctuation">,</span> CThostFtdcRspInfoField <span class="token operator">*</span>pRspInfo<span class="token punctuation">,</span> <span class="token keyword">int</span> nRequestID<span class="token punctuation">,</span> bool bIsLast<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;OnRspSubMarketData: &quot;</span> <span class="token operator">&lt;&lt;</span> pSpecificInstrument<span class="token operator">-&gt;</span>InstrumentID <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">OnMarketData</span><span class="token punctuation">(</span>CThostFtdcMarketDataField <span class="token operator">*</span>pMarketData<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;OnMarketData: &quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">OnRtnDepthMarketData</span><span class="token punctuation">(</span>CThostFtdcDepthMarketDataField <span class="token operator">*</span>data<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    CThostFtdcDepthMarketDataField <span class="token operator">*</span>dataCopy <span class="token operator">=</span> new CThostFtdcDepthMarketDataField<span class="token punctuation">;</span>
    <span class="token operator">*</span>dataCopy <span class="token operator">=</span> <span class="token operator">*</span>data<span class="token punctuation">;</span>
    <span class="token function">onDepthMarketData</span><span class="token punctuation">(</span>dataCopy<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">registerOnFrontConnected</span><span class="token punctuation">(</span><span class="token keyword">const</span> FrontConnectedCallback <span class="token operator">&amp;</span>callback<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    this<span class="token operator">-&gt;</span>onFrontConnected <span class="token operator">=</span> callback<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">registerOnLoggedIn</span><span class="token punctuation">(</span><span class="token keyword">const</span> LoggedInCallBack <span class="token operator">&amp;</span>callback<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    this<span class="token operator">-&gt;</span>onLoggedIn <span class="token operator">=</span> callback<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span> Spi<span class="token operator">::</span><span class="token function">registerOnDepthMarketData</span><span class="token punctuation">(</span><span class="token keyword">const</span> DepthMarketCallBack <span class="token operator">&amp;</span>callback<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    this<span class="token operator">-&gt;</span>onDepthMarketData <span class="token operator">=</span> callback<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后封装这些c++代码,伪代码如下:</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">__BRIDGE_H__</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__BRIDGE_H__</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;lib/ThostFtdcMdApi.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;ThostFtdcUserApiStruct.h&quot;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">__cplusplus</span></span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span>
<span class="token punctuation">{</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

    <span class="token keyword">struct</span> <span class="token class-name">CGateway</span>
    <span class="token punctuation">{</span>
        CThostFtdcMdApi <span class="token operator">*</span>api<span class="token punctuation">;</span>
        Spi <span class="token operator">*</span>spi<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">typedef</span> <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>on_front_connectd<span class="token punctuation">)</span><span class="token punctuation">(</span>CGateway <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">create_api</span><span class="token punctuation">(</span>Cgateway <span class="token operator">*</span>gw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/// 在创建api后注册上spi</span>
        gw<span class="token operator">-&gt;</span>api <span class="token operator">=</span> CThostFtdcMdApi<span class="token operator">::</span><span class="token function">CreateFtdcMdApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gw<span class="token operator">-&gt;</span>spi <span class="token operator">=</span> new <span class="token function">Spi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        gw<span class="token operator">-&gt;</span>api<span class="token operator">-&gt;</span><span class="token function">RegisterSpi</span><span class="token punctuation">(</span>gw<span class="token operator">-&gt;</span>spi<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">gateway_reg_on_front_conneted</span><span class="token punctuation">(</span>CGateway <span class="token operator">*</span>gw<span class="token punctuation">,</span> on_front_connectd func<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// gw-&gt;spi-&gt;registerOnFrontConnected(func); 要点</span>
        gw<span class="token operator">-&gt;</span>spi<span class="token operator">-&gt;</span><span class="token function">registerOnFrontConnected</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">=</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                                <span class="token punctuation">{</span> <span class="token function">func</span><span class="token punctuation">(</span>gw<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">__cplusplus</span></span>
<span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面就是本文的要点之一,回调函数不能直接注册到c++中,需要通过lambda函数来注册,来保证Cgateway的指针可以顺利传递到spi中。</p><h2 id="rust与c交互" tabindex="-1"><a class="header-anchor" href="#rust与c交互" aria-hidden="true">#</a> Rust与C交互</h2><p>做好了c++的桥接,接下来就是rust与c的桥接了,要点就是内存布局要完全一致，不然会出现数据从c++到rust出现空指针或者内存访问错误等问题。</p><h3 id="类的封装" tabindex="-1"><a class="header-anchor" href="#类的封装" aria-hidden="true">#</a> 类的封装</h3><p>先将c中实现的接口封装到rust中,伪代码如下:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ffi<span class="token punctuation">::</span></span>c_void<span class="token punctuation">;</span>

<span class="token function">repr</span><span class="token punctuation">(</span><span class="token class-name">C</span><span class="token punctuation">)</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">CGateway</span> <span class="token punctuation">{</span>
    api<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> c_void<span class="token punctuation">,</span>
    spi<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> c_void<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">create_api</span><span class="token punctuation">(</span>gw<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">CGateway</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">gateway_reg_on_front_conneted</span><span class="token punctuation">(</span>gw<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">CGateway</span><span class="token punctuation">,</span> func<span class="token punctuation">:</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">CGateway</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到在CGateway中,api和spi都是指针,这就是在rust中访问c++中的对象的方式,api和spi的任何方法都没法通过定义的指针来直接访问,<br> 需要在桥接的c中去访问,所以此处只定义了相关函数的声明。</p><h3 id="回调函数的封装" tabindex="-1"><a class="header-anchor" href="#回调函数的封装" aria-hidden="true">#</a> 回调函数的封装</h3><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">on_front_connectd</span><span class="token punctuation">(</span>gw<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">CGateway</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;on_front_connectd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> gw <span class="token operator">=</span> <span class="token class-name">CGateway</span> <span class="token punctuation">{</span> api<span class="token punctuation">:</span> <span class="token namespace">std<span class="token punctuation">::</span>ptr<span class="token punctuation">::</span></span><span class="token function">null_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spi<span class="token punctuation">:</span> <span class="token namespace">std<span class="token punctuation">::</span>ptr<span class="token punctuation">::</span></span><span class="token function">null_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> ptr <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> gw <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">CGateway</span><span class="token punctuation">;</span>
    <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> ptr <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> gw <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">CGateway</span><span class="token punctuation">;</span>
        <span class="token function">create_api</span><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">gateway_reg_on_front_conneted</span><span class="token punctuation">(</span>ptr<span class="token punctuation">,</span> on_front_connectd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="返回数据的内存对齐" tabindex="-1"><a class="header-anchor" href="#返回数据的内存对齐" aria-hidden="true">#</a> 返回数据的内存对齐</h3><p>这也是本文的要点之一,之前遇到过很多次c++返回数据出现大量空指针或者内存不可访问的问题,<br> 总结下来由如下几点:</p><ul><li>rust定义结构体时顺序没有严格按照ctp定义</li><li>字符串使用<code>*const c_char</code>来表示c中的<code>char[n]</code>,这是错误的,必须使用<code>[u8; n]</code></li><li>c++中没有对需要回调函数访问的数据进行深拷贝,原始数据被c++清理了</li></ul><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ffi<span class="token punctuation">::</span></span><span class="token punctuation">{</span>c_double<span class="token punctuation">,</span> c_int<span class="token punctuation">,</span> <span class="token class-name">CStr</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token attribute attr-name">#[allow(non_snake_case)]</span>
<span class="token attribute attr-name">#[repr(C)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">CThostFtdcDepthMarketDataField</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token class-name">TradingDay</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> reserve1<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">ExchangeID</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> reserve2<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">LastPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">PreSettlementPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">PreClosePrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">PreOpenInterest</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">OpenPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">HighestPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">LowestPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">Volume</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">Turnover</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">OpenInterest</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">ClosePrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">SettlementPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">UpperLimitPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">LowerLimitPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">PreDelta</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">CurrDelta</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">UpdateTime</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">UpdateMillisec</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidPrice1</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidVolume1</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskPrice1</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskVolume1</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidPrice2</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidVolume2</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskPrice2</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskVolume2</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidPrice3</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidVolume3</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskPrice3</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskVolume3</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidPrice4</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidVolume4</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskPrice4</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskVolume4</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidPrice5</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BidVolume5</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskPrice5</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AskVolume5</span><span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">AveragePrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">ActionDay</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">InstrumentID</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">81</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">ExchangeInstID</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">81</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BandingUpperPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> <span class="token class-name">BandingLowerPrice</span><span class="token punctuation">:</span> c_double<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">MarketData</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> trading_day<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> reserve1<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> exchange_id<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> reserve2<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> last_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> pre_settlement_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> pre_close_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> pre_open_interest<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> open_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> highest_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> lowest_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> volume<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> turnover<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> open_interest<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> close_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> settlement_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> upper_limit_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> lower_limit_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> pre_delta<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> curr_delta<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> update_time<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> update_millisec<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_price1<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_volume1<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_price1<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_volume1<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_price2<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_volume2<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_price2<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_volume2<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_price3<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_volume3<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_price3<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_volume3<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_price4<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_volume4<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_price4<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_volume4<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_price5<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> bid_volume5<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_price5<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> ask_volume5<span class="token punctuation">:</span> c_int<span class="token punctuation">,</span>
    <span class="token keyword">pub</span> average_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> action_day<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> instrument_id<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> exchange_inst_id<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> banding_upper_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> banding_lower_price<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">bytes_2_string</span><span class="token punctuation">(</span>b<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token class-name">CStr</span><span class="token punctuation">::</span><span class="token function">from_bytes_until_nul</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">to_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token class-name">MarketData</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">CThostFtdcDepthMarketDataField</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">into</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">MarketData</span> <span class="token punctuation">{</span>
        <span class="token class-name">MarketData</span> <span class="token punctuation">{</span>
            trading_day<span class="token punctuation">:</span> <span class="token function">bytes_2_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">TradingDay</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            reserve1<span class="token punctuation">:</span> <span class="token function">bytes_2_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>reserve1<span class="token punctuation">)</span><span class="token punctuation">,</span>
            exchange_id<span class="token punctuation">:</span> <span class="token function">bytes_2_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">ExchangeID</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            reserve2<span class="token punctuation">:</span> <span class="token function">bytes_2_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>reserve2<span class="token punctuation">)</span><span class="token punctuation">,</span>
            last_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">LastPrice</span><span class="token punctuation">,</span>
            pre_settlement_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">PreSettlementPrice</span><span class="token punctuation">,</span>
            pre_close_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">PreClosePrice</span><span class="token punctuation">,</span>
            pre_open_interest<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">PreOpenInterest</span><span class="token punctuation">,</span>
            open_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">OpenPrice</span><span class="token punctuation">,</span>
            highest_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">HighestPrice</span><span class="token punctuation">,</span>
            lowest_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">LowestPrice</span><span class="token punctuation">,</span>
            volume<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">Volume</span><span class="token punctuation">,</span>
            turnover<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">Turnover</span><span class="token punctuation">,</span>
            open_interest<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">OpenInterest</span><span class="token punctuation">,</span>
            close_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">ClosePrice</span><span class="token punctuation">,</span>
            settlement_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">SettlementPrice</span><span class="token punctuation">,</span>
            upper_limit_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">UpperLimitPrice</span><span class="token punctuation">,</span>
            lower_limit_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">LowerLimitPrice</span><span class="token punctuation">,</span>
            pre_delta<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">PreDelta</span><span class="token punctuation">,</span>
            curr_delta<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">CurrDelta</span><span class="token punctuation">,</span>
            update_time<span class="token punctuation">:</span> <span class="token function">bytes_2_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">UpdateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            update_millisec<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">UpdateMillisec</span><span class="token punctuation">,</span>
            bid_price1<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidPrice1</span><span class="token punctuation">,</span>
            bid_volume1<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidVolume1</span><span class="token punctuation">,</span>
            ask_price1<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskPrice1</span><span class="token punctuation">,</span>
            ask_volume1<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskVolume1</span><span class="token punctuation">,</span>
            bid_price2<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidPrice2</span><span class="token punctuation">,</span>
            bid_volume2<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidVolume2</span><span class="token punctuation">,</span>
            ask_price2<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskPrice2</span><span class="token punctuation">,</span>
            ask_volume2<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskVolume2</span><span class="token punctuation">,</span>
            bid_price3<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidPrice3</span><span class="token punctuation">,</span>
            bid_volume3<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidVolume3</span><span class="token punctuation">,</span>
            ask_price3<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskPrice3</span><span class="token punctuation">,</span>
            ask_volume3<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskVolume3</span><span class="token punctuation">,</span>
            bid_price4<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidPrice4</span><span class="token punctuation">,</span>
            bid_volume4<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidVolume4</span><span class="token punctuation">,</span>
            ask_price4<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskPrice4</span><span class="token punctuation">,</span>
            ask_volume4<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskVolume4</span><span class="token punctuation">,</span>
            bid_price5<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidPrice5</span><span class="token punctuation">,</span>
            bid_volume5<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BidVolume5</span><span class="token punctuation">,</span>
            ask_price5<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskPrice5</span><span class="token punctuation">,</span>
            ask_volume5<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AskVolume5</span><span class="token punctuation">,</span>
            average_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">AveragePrice</span><span class="token punctuation">,</span>
            action_day<span class="token punctuation">:</span> <span class="token function">bytes_2_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">ActionDay</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            instrument_id<span class="token punctuation">:</span> <span class="token function">bytes_2_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">InstrumentID</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            exchange_inst_id<span class="token punctuation">:</span> <span class="token function">bytes_2_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">ExchangeInstID</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            banding_upper_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BandingUpperPrice</span><span class="token punctuation">,</span>
            banding_lower_price<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token class-name">BandingLowerPrice</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如何在c-中访问rust中的不安全数据" tabindex="-1"><a class="header-anchor" href="#如何在c-中访问rust中的不安全数据" aria-hidden="true">#</a> 如何在c++中访问rust中的不安全数据</h3><p>我们使用回调函数,目的就是将c++中产生的数据在rust中进行处理,如果rust中不能处理这些数据,回调函数功能将大打折扣</p><p>伪代码</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">on_marketdata</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">CThostFtdcDepthMarketDataField</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们的目标当然是在<code>on_marketdata</code>函数中对数据进行操作,这个过程不可避免要使用到rust中的其它对象,那我们要怎么办？答案还是<code>*mut</code>。</p><p>伪代码</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Handler</span><span class="token punctuation">;</span>

<span class="token keyword">impl</span> <span class="token class-name">Handler</span> <span class="token punctuation">{</span>
    <span class="token comment">// some handlers</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">handle_marketdata</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">CThostFtdcDepthMarketDataField</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">repr</span><span class="token punctuation">(</span><span class="token class-name">C</span><span class="token punctuation">)</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">CGateway</span> <span class="token punctuation">{</span>
    api<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> c_void<span class="token punctuation">,</span>
    spi<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> c_void<span class="token punctuation">,</span>
    handler<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> c_void<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">on_marketdata</span><span class="token punctuation">(</span>cgw<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">CGateway</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">CThostFtdcDepthMarketDataField</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        cgw<span class="token punctuation">.</span>handler<span class="token punctuation">.</span><span class="token function">handle_marketdata</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h1><p>总结来说,在rust中使用ctp主要有以下技巧:</p><ul><li>结构体自动完全对齐</li><li>字符串不要盲目使用<code>*const c_char</code></li><li>rust对象传入c中可以借用指针来实现<code>*mut MyStruct</code></li><li>c++中的回调函数需要使用Lamda表达式封装下</li></ul>`,47),o=[t];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","ctp-rust.html.vue"]]);export{r as default};
