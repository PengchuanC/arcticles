import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as i,f as l,a as n,b as s,d as t,e}from"./app-UW1hfwyn.js";const u={},d=n("p",null,"Python 语言的扩展模块，主要是用 C 语言编写的，可以直接在 Python 中使用。但实际上除了C语言的扩展模块，Python 还支持其他语言的扩展模块，比如 C++、Cython、C#、Rust 等，实现的方式有ABI、CFFI、SWIG等。",-1),r=n("p",null,"此次主要研究 Python 的 C 系列扩展模块，基本都是通过ABI的方式实现，包括C、Cython和CPP(pybind11)，作为对比，会加入纯Python和Python代码编译成动态链接库来作为对比项。",-1),k=n("h1",{id:"python扩展对比",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python扩展对比","aria-hidden":"true"},"#"),s(" python扩展对比")],-1),v=n("h2",{id:"_1-简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-简介","aria-hidden":"true"},"#"),s(" 1. 简介")],-1),m=n("p",null,"Python 语言的扩展模块，主要是用 C 语言编写的，可以直接在 Python 中使用。但实际上除了C语言的扩展模块，Python 还支持其他语言的扩展模块，比如 C++、Cython、C#、Rust 等，实现的方式有ABI、CFFI、SWIG等。",-1),b=n("br",null,null,-1),h={href:"https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist",target:"_blank",rel:"noopener noreferrer"},y=e(`<h2 id="_2-扩展模块的类型" tabindex="-1"><a class="header-anchor" href="#_2-扩展模块的类型" aria-hidden="true">#</a> 2. 扩展模块的类型</h2><p>windows下，Python的扩展模块通常是由其他语言编译出的动态链接库，可以直接在 Python 中使用，在本次的测试环境中文件名通常为<code>modulename.cp311-win_amd64.pyd</code>。</p><p>本次测试主要测试两类场景:</p><ul><li><ol><li>需要频繁在语言间进行数据交换，但是CPU开销很小的场景</li></ol></li><li><ol start="2"><li>语言间通信次数很少，但是CPU开销较大的场景</li></ol></li></ul><h2 id="_3-代码编写" tabindex="-1"><a class="header-anchor" href="#_3-代码编写" aria-hidden="true">#</a> 3. 代码编写</h2><p>本次测试要实现的功能很简单，主要包含<code>hello(name)</code>和<code>fibnacci(n)</code>两个函数，来对应前述两种场景。</p><h3 id="_3-1-纯python" tabindex="-1"><a class="header-anchor" href="#_3-1-纯python" aria-hidden="true">#</a> 3.1 纯Python</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello, %s !&quot;</span> <span class="token operator">%</span> name


<span class="token keyword">def</span> <span class="token function">fibnacci</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> n
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> fibnacci<span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> fibnacci<span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-c" tabindex="-1"><a class="header-anchor" href="#_3-2-c" aria-hidden="true">#</a> 3.2 C</h3><p>C语言扩展模块基于官方标准的Python/C API开发。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PY_SSIZE_T_CLEAN</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Python.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;stdio.h&quot;</span></span>

<span class="token keyword">static</span> PyObject <span class="token operator">*</span><span class="token function">Py_hello</span><span class="token punctuation">(</span>PyObject <span class="token operator">*</span>self<span class="token punctuation">,</span> PyObject <span class="token operator">*</span>args<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">PyArg_ParseTuple</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">char</span> greeting<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">snprintf</span><span class="token punctuation">(</span>greeting<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello, %s!&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">Py_BuildValue</span><span class="token punctuation">(</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> greeting<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> PyObject <span class="token operator">*</span><span class="token function">Py_fibnacci</span><span class="token punctuation">(</span>PyObject <span class="token operator">*</span>self<span class="token punctuation">,</span> PyObject <span class="token operator">*</span>args<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">PyArg_ParseTuple</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token string">&quot;i&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">long</span> <span class="token keyword">long</span> ret <span class="token operator">=</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">Py_BuildValue</span><span class="token punctuation">(</span><span class="token string">&quot;i&quot;</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> PyMethodDef methods<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> Py_hello<span class="token punctuation">,</span> METH_VARARGS<span class="token punctuation">,</span> <span class="token string">&quot;Print Hello, World!&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">&quot;fibnacci&quot;</span><span class="token punctuation">,</span> Py_fibnacci<span class="token punctuation">,</span> METH_VARARGS<span class="token punctuation">,</span> <span class="token string">&quot;cal fibnacci&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">}</span> <span class="token comment">// 结束标志</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">struct</span> <span class="token class-name">PyModuleDef</span> cpmodule <span class="token operator">=</span> <span class="token punctuation">{</span>
    PyModuleDef_HEAD_INIT<span class="token punctuation">,</span>
    <span class="token string">&quot;cp&quot;</span><span class="token punctuation">,</span>      <span class="token comment">/* name of module */</span>
    <span class="token string">&quot;cp desc&quot;</span><span class="token punctuation">,</span> <span class="token comment">/* module documentation, may be NULL */</span>
    <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
    methods<span class="token punctuation">}</span><span class="token punctuation">;</span>

PyMODINIT_FUNC <span class="token function">PyInit_cp</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">PyModule_Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cpmodule<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-cython" tabindex="-1"><a class="header-anchor" href="#_3-3-cython" aria-hidden="true">#</a> 3.3 Cython</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>cpdef <span class="token builtin">str</span> hello<span class="token punctuation">(</span><span class="token builtin">str</span> name<span class="token punctuation">)</span> <span class="token keyword">except</span> <span class="token operator">*</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;hello, &quot;</span> <span class="token operator">+</span> name


cdef <span class="token builtin">int</span> fib<span class="token punctuation">(</span><span class="token builtin">int</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> n
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> fib<span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> fib<span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>


cpdef <span class="token builtin">int</span> fibnacci<span class="token punctuation">(</span><span class="token builtin">int</span> n<span class="token punctuation">)</span> <span class="token keyword">except</span> <span class="token operator">*</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> fib<span class="token punctuation">(</span>n<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-cpp" tabindex="-1"><a class="header-anchor" href="#_3-4-cpp" aria-hidden="true">#</a> 3.4 CPP</h3>`,14),g={href:"https://pybind11.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer"},_=e(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pybind11/pybind11.h&gt;</span></span>

<span class="token keyword">namespace</span> py <span class="token operator">=</span> pybind11<span class="token punctuation">;</span>

py<span class="token double-colon punctuation">::</span>str <span class="token function">hello</span><span class="token punctuation">(</span>py<span class="token double-colon punctuation">::</span>str name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    py<span class="token double-colon punctuation">::</span>str greeting <span class="token operator">=</span> py<span class="token double-colon punctuation">::</span><span class="token function">str</span><span class="token punctuation">(</span><span class="token string">&quot;hello, {} !&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> greeting<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">fibnacci</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">fibnacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fibnacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">PYBIND11_MODULE</span><span class="token punctuation">(</span>cc<span class="token punctuation">,</span> m<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    m<span class="token punctuation">.</span><span class="token function">doc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;ccmodule&quot;</span><span class="token punctuation">;</span>
    m<span class="token punctuation">.</span><span class="token function">def</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hello<span class="token punctuation">,</span> <span class="token string">&quot;Say hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    m<span class="token punctuation">.</span><span class="token function">def</span><span class="token punctuation">(</span><span class="token string">&quot;fibnacci&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>fibnacci<span class="token punctuation">,</span> <span class="token string">&quot;Fibonacci&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-项目构建" tabindex="-1"><a class="header-anchor" href="#_4-项目构建" aria-hidden="true">#</a> 4. 项目构建</h2><p>本次项目使用setuptools进行构建，编译扩展的脚本在<code>setupo.py</code>中，将各个语言的扩展作为子模块放到<code>speedup</code>项目下。</p><h2 id="_4-1-目录结构" tabindex="-1"><a class="header-anchor" href="#_4-1-目录结构" aria-hidden="true">#</a> 4.1 目录结构</h2><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>speedup
├── src
│   ├── ccmodule          // cpp扩展
│   │   └── ccmodule.cc
│   ├── cpmodule          // c扩展
│   │   └── cpmodule.c
│   ├── cymodule          // cython扩展
│   │   ├── cymodule.pxd
│   │   └── cymodule.pyx
│   ├── pymodule          // 纯python编译
│   │   └── pymodule.py
│   └── speedup
│       ├── __init__.py
│       └── pp.py         // 纯python
├── tests
│   ├── test_hello.py
│   └── test_fibnacci.py
├── README.md
├── pyproject.toml        // 项目描述
└── setup.py              //  构建脚本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-2-构建" tabindex="-1"><a class="header-anchor" href="#_4-2-构建" aria-hidden="true">#</a> 4.2 构建</h2><h3 id="_4-2-1-pyproject-toml" tabindex="-1"><a class="header-anchor" href="#_4-2-1-pyproject-toml" aria-hidden="true">#</a> 4.2.1 pyproject.toml</h3><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">build-system</span><span class="token punctuation">]</span>
<span class="token key property">requires</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;setuptools&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cython&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wheel&quot;</span><span class="token punctuation">]</span>
<span class="token key property">build-backend</span> <span class="token punctuation">=</span> <span class="token string">&quot;setuptools.build_meta&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">project</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;speedup&quot;</span>
<span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.0.1&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">tool.setuptools</span><span class="token punctuation">]</span>
<span class="token key property">package-dir</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">&quot;&quot;</span> <span class="token punctuation">=</span> <span class="token string">&quot;src&quot;</span> <span class="token punctuation">}</span>
<span class="token key property">include-package-data</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>

<span class="token punctuation">[</span><span class="token table class-name">tool.setuptools.packages.find</span><span class="token punctuation">]</span>
<span class="token key property">where</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">]</span>
<span class="token key property">include</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span>
<span class="token key property">exclude</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;tests*&quot;</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token table class-name">tool.setuptools.package-data</span><span class="token punctuation">]</span>
<span class="token key property">speedup</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;*.pyi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.pxd&quot;</span><span class="token punctuation">]</span>
<span class="token key property">&quot;speedup.cp&quot;</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;*.pxd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.pyi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.pyx&quot;</span><span class="token punctuation">]</span>
<span class="token key property">&quot;speedup.cy&quot;</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;*.pxd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.pyi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.pyx&quot;</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token table class-name">tool.pytest.ini_options</span><span class="token punctuation">]</span>
<span class="token key property">addopts</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;--import-mode=importlib&quot;</span><span class="token punctuation">]</span>
<span class="token key property">pythonpath</span> <span class="token punctuation">=</span> <span class="token string">&quot;src&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),f={id:"_4-2-2-setup-py",tabindex:"-1"},q=n("a",{class:"header-anchor",href:"#_4-2-2-setup-py","aria-hidden":"true"},"#",-1),P={href:"http://setup.py",target:"_blank",rel:"noopener noreferrer"},w=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> setuptools <span class="token keyword">import</span> Extension<span class="token punctuation">,</span> setup
<span class="token keyword">from</span> pybind11<span class="token punctuation">.</span>setup_helpers <span class="token keyword">import</span> Pybind11Extension<span class="token punctuation">,</span> build_ext

setup<span class="token punctuation">(</span>
    ext_modules<span class="token operator">=</span><span class="token punctuation">[</span>
        Extension<span class="token punctuation">(</span><span class="token string">&quot;speedup.cp&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;src/cpmodule/cpmodule.c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Pybind11Extension<span class="token punctuation">(</span><span class="token string">&quot;speedup.cc&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;src/ccmodule/ccmodule.cc&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Extension<span class="token punctuation">(</span><span class="token string">&quot;speedup.cy&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;src/cymodule/cymodule.pyx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Extension<span class="token punctuation">(</span><span class="token string">&quot;speedup.py&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;src/pymodule/pymodule.py&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    build_ext<span class="token operator">=</span>build_ext
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-3-编译" tabindex="-1"><a class="header-anchor" href="#_4-2-3-编译" aria-hidden="true">#</a> 4.2.3 编译</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> pip <span class="token function">install</span> <span class="token parameter variable">-U</span> build wheel cython setuptools pybind11  <span class="token comment">#  安装依赖</span>
<span class="token operator">&gt;</span> python <span class="token parameter variable">-m</span> build <span class="token parameter variable">-n</span>  <span class="token comment"># 编译和构建whl包</span>
<span class="token operator">&gt;</span> pip <span class="token function">install</span> dist/speedup-0.0.1-cp311-cp311-win_amd64.whl  <span class="token comment"># 安装</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-性能测试" tabindex="-1"><a class="header-anchor" href="#_5-性能测试" aria-hidden="true">#</a> 5. 性能测试</h2><p>使用cProfile进行性能测试，测试单位为秒，测试命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> python tests/test_hello.py
<span class="token operator">&gt;</span> python tests/test_fibnacci.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-1-测试结果" tabindex="-1"><a class="header-anchor" href="#_5-1-测试结果" aria-hidden="true">#</a> 5.1 测试结果</h3><table><thead><tr><th>situation</th><th>Python</th><th>Python Compiled</th><th>C</th><th>Cython</th><th>CPP</th></tr></thead><tbody><tr><td>hello(10000)</td><td>0.001</td><td>0.001</td><td>0.003</td><td>0.001</td><td>0.011</td></tr><tr><td>hello(1000000)</td><td>0.141</td><td>0.138</td><td>0.277</td><td>0.093</td><td>0.758</td></tr><tr><td>fib(40)</td><td>10.528</td><td>10.302</td><td>0.327</td><td>0.353</td><td>0.564</td></tr></tbody></table><p>测试平台</p><ul><li>Windows 11 Pro 23H2</li><li>12th Gen Intel(R) Core(TM) i3-12100 3.30 GHz</li><li>Python 3.11.7</li><li>Cython 3.0.0</li><li>Pybind11 2.10.4</li></ul><h3 id="_5-2-分析" tabindex="-1"><a class="header-anchor" href="#_5-2-分析" aria-hidden="true">#</a> 5.2 分析</h3><p>从测试结果可以看出：</p><p>在场景1，Python/Cython的性能会优于C/CPP，在语言间通信较多且任务十分简单时，不适合编写C扩展；在情景2下，C API性能明显强于其它扩展，Cython性能稍弱，Pybind11是对CPP和C API的封装，性能也不错，但开销还是比C/Cython高，<br> 原生Python最高。</p><ul><li>执行简单任务时，纯Python的性能优于C/Cython/CPP，主要是因为跨语言对对象进行序列化/反序列化的开销较大；</li><li>在性能需求较高时，C扩展的速度是最快的，但考虑到C的开发维护成本，Cython/CPP也是不错的选择；</li><li>对比C，CPP(pybind11)作为C的高级封装和扩展，性能稍弱一点；</li><li>对比C，Cython在不同情形下和C互有优劣；</li><li>对比Python，Cython会有性能提升；</li></ul><h2 id="_6-源码分享" tabindex="-1"><a class="header-anchor" href="#_6-源码分享" aria-hidden="true">#</a> 6. 源码分享</h2>`,15),C={href:"https://github.com/PengchuanC/pengchuanc.github.io/tree/main/src/speedup",target:"_blank",rel:"noopener noreferrer"};function x(I,E){const a=o("ExternalLinkIcon");return c(),i("div",null,[d,r,l(" more "),k,v,m,n("p",null,[s("此次主要研究 Python 的 C 系列扩展模块，基本都是通过ABI的方式实现，包括C、Cython和CPP(pybind11)，作为对比，会加入纯Python和Python代码编译成动态链接库来作为对比项。"),b,s(" 使用的Python解释器为官方的CPython解释器，版本为3.11.6，Cython为3.0以上版本，使用的编译工具为MSVC，如果要编译源码，必须提前安装"),n("a",h,[s("Microsoft Visual C++ Redistributable"),t(a)]),s("。")]),y,n("p",null,[s("CPP版本使用"),n("a",g,[s("pybind11"),t(a)]),s("来实现语言绑定。")]),_,n("h3",f,[q,s(" 4.2.2 "),n("a",P,[s("setup.py"),t(a)])]),w,n("p",null,[s("上述测试所用源代码见项目"),n("a",C,[s("speedup"),t(a)]),s("。")])])}const N=p(u,[["render",x],["__file","python-extension.html.vue"]]);export{N as default};
