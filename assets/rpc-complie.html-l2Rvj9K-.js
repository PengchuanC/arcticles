import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as s,e as n}from"./app-FWawSowT.js";const o={},r=n(`<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> Python</h1><h3 id="python中的编译方式" tabindex="-1"><a class="header-anchor" href="#python中的编译方式" aria-hidden="true">#</a> Python中的编译方式</h3><p>假设当前工作目录为<code>protobuf</code>，待编译文件为<code>hello.proto</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">cd</span> protobuf
<span class="token operator">&gt;</span> python <span class="token parameter variable">-m</span> grpc_tools.protoc <span class="token parameter variable">--python_out</span><span class="token operator">=</span>. <span class="token parameter variable">--grpc_python_out</span><span class="token operator">=</span>. -I. hello.proto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="go" tabindex="-1"><a class="header-anchor" href="#go" aria-hidden="true">#</a> Go</h1><h3 id="golang中的编译方式" tabindex="-1"><a class="header-anchor" href="#golang中的编译方式" aria-hidden="true">#</a> Golang中的编译方式</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">cd</span> protobuf
<span class="token operator">&gt;</span> protoc <span class="token parameter variable">--go_out</span><span class="token operator">=</span>plugins<span class="token operator">=</span>grpc:. hello.proto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,7),t=[r];function p(l,c){return e(),s("div",null,t)}const h=a(o,[["render",p],["__file","rpc-complie.html.vue"]]);export{h as default};
