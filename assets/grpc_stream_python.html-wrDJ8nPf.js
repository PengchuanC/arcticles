const e=JSON.parse('{"key":"v-37ba5bf6","path":"/python/grpc_stream_python.html","title":"通过grpc服务上传下载大型文件","lang":"zh-CN","frontmatter":{"title":"通过grpc服务上传下载大型文件","date":"2020-12-09T07:49:54.000Z","category":["技术","python"],"tag":["grpc","python"],"description":"传统文件的下载方式主要使用tcp服务，这种功能同样可以使用grpc的stream来实现，通过使用流(streaming)，可以向服务器或者客户端持续发送数据，来达到上传和下载文件的目的。 Python中使用stream的要点在于灵活运用generator，发送数据使用yield，数据传输完成使用return而非break。 1.创建项目 整个项目位于desktop目录下，首先新建必要的目录及文件。 desktop&gt; mkdir file_server desktop&gt; mkdir file_server/proto desktop&gt; mkdir file_server/send desktop&gt; mkdir file_server/download","head":[["meta",{"property":"og:url","content":"https://arc.cpolar.cn/python/grpc_stream_python.html"}],["meta",{"property":"og:site_name","content":"Maverick"}],["meta",{"property":"og:title","content":"通过grpc服务上传下载大型文件"}],["meta",{"property":"og:description","content":"传统文件的下载方式主要使用tcp服务，这种功能同样可以使用grpc的stream来实现，通过使用流(streaming)，可以向服务器或者客户端持续发送数据，来达到上传和下载文件的目的。 Python中使用stream的要点在于灵活运用generator，发送数据使用yield，数据传输完成使用return而非break。 1.创建项目 整个项目位于desktop目录下，首先新建必要的目录及文件。 desktop&gt; mkdir file_server desktop&gt; mkdir file_server/proto desktop&gt; mkdir file_server/send desktop&gt; mkdir file_server/download"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-02T11:07:09.000Z"}],["meta",{"property":"article:author","content":"Chuanchao.peng"}],["meta",{"property":"article:tag","content":"grpc"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:published_time","content":"2020-12-09T07:49:54.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-02T11:07:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"通过grpc服务上传下载大型文件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-12-09T07:49:54.000Z\\",\\"dateModified\\":\\"2024-01-02T11:07:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chuanchao.peng\\",\\"url\\":\\"https://github.com/PengchuanC\\"}]}"]]},"headers":[{"level":2,"title":"1.创建项目","slug":"_1-创建项目","link":"#_1-创建项目","children":[]},{"level":2,"title":"2.创建proto文件","slug":"_2-创建proto文件","link":"#_2-创建proto文件","children":[]},{"level":2,"title":"3.创建server端","slug":"_3-创建server端","link":"#_3-创建server端","children":[]},{"level":2,"title":"4.创建client端","slug":"_4-创建client端","link":"#_4-创建client端","children":[]},{"level":2,"title":"5.运行服务","slug":"_5-运行服务","link":"#_5-运行服务","children":[]}],"git":{"createdTime":1704193629000,"updatedTime":1704193629000,"contributors":[{"name":"PengchuanC","email":"gameboynes@gmail.com","commits":1}]},"readingTime":{"minutes":3.85,"words":1155},"filePathRelative":"python/grpc_stream_python.md","localizedDate":"2020年12月9日","excerpt":"<p>传统文件的下载方式主要使用tcp服务，这种功能同样可以使用grpc的stream来实现，通过使用流(streaming)，可以向服务器或者客户端持续发送数据，来达到上传和下载文件的目的。</p>\\n<p>Python中使用stream的要点在于灵活运用generator，发送数据使用yield，数据传输完成使用return而非break。</p>\\n<h2> 1.创建项目</h2>\\n<p>整个项目位于desktop目录下，首先新建必要的目录及文件。</p>\\n<div class=\\"language-powershell line-numbers-mode\\" data-ext=\\"powershell\\"><pre class=\\"language-powershell\\"><code>desktop&gt; mkdir file_server\\ndesktop&gt; mkdir file_server/proto\\ndesktop&gt; mkdir file_server/send\\ndesktop&gt; mkdir file_server/download\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
