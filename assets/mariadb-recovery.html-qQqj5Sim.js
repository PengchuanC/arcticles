import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as s,e as n}from"./app-0D1gluiy.js";const d={},r=n(`<h1 id="_1-事故还原" tabindex="-1"><a class="header-anchor" href="#_1-事故还原" aria-hidden="true">#</a> 1.事故还原</h1><p>优于同时在多个终端执行select、insert和delete操作，数据库意外崩溃</p><h1 id="_2-数据恢复" tabindex="-1"><a class="header-anchor" href="#_2-数据恢复" aria-hidden="true">#</a> 2.数据恢复</h1><h2 id="_2-1-尝试重新启动" tabindex="-1"><a class="header-anchor" href="#_2-1-尝试重新启动" aria-hidden="true">#</a> 2.1 尝试重新启动</h2><p>执行<code>service mysqld restart</code>发现数据库报错，无法启动</p><h2 id="_2-2-进入恢复模式" tabindex="-1"><a class="header-anchor" href="#_2-2-进入恢复模式" aria-hidden="true">#</a> 2.2 进入恢复模式</h2><p>当发现数据无法启动后，尝试进入恢复模式，<code>vi /etc/my.cnf</code></p><p>在配置文件中[mysqld]部分增加以下内容</p><div class="language-cnf line-numbers-mode" data-ext="cnf"><pre class="language-cnf"><code>[mysqld]
innodb_force_recovery=1
innodb_purge_thread=0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后执行<code>service mysqld restart</code>重启数据库，如果继续失败则将<code>innodb_force_recovery</code>的值修改为2，其中<code>innodb_force_recovery</code>分为0-6这七个等级，可用逐个尝试，直至数据重新启动</p><h2 id="_2-3-备份数据" tabindex="-1"><a class="header-anchor" href="#_2-3-备份数据" aria-hidden="true">#</a> 2.3 备份数据</h2><p>使用 <code>mysqldump</code>备份数据库</p><p>以我的情况为例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span> <span class="token parameter variable">--databases</span> am_sma_third <span class="token operator">&gt;</span> /home/sma/backup/am_sma_third_20210903.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-4-初始化数据库" tabindex="-1"><a class="header-anchor" href="#_2-4-初始化数据库" aria-hidden="true">#</a> 2.4 初始化数据库</h2><p>初始化之前，为防止意外，将旧的数据库文件备份一下，文件位置可以从配置文件<code>my.cnf</code>查看</p><div class="language-cnf line-numbers-mode" data-ext="cnf"><pre class="language-cnf"><code>[mysqld]
datadir=/home/mysql/datadir
socket=/home/mysql/datadir/mysql.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中datadir便是文件位置，进行备份</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">cd</span> /home/mysql
<span class="token operator">&gt;</span> <span class="token function">mkdir</span> datadirbak <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> datadirbak/20210903
<span class="token operator">&gt;</span> <span class="token function">mv</span> datadir/* datadirbak/20210903/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>备份完成后，初始化数据库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> mysql_install_db <span class="token parameter variable">--user</span><span class="token operator">=</span>mysql <span class="token parameter variable">--basedir</span><span class="token operator">=</span>/usr <span class="token parameter variable">--datadir</span><span class="token operator">=</span>/home/mysql/datadir/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对文件夹重新授权，防止意外</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> mysql:mysql /home/mysql 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注释掉恢复模式</p><div class="language-cnf line-numbers-mode" data-ext="cnf"><pre class="language-cnf"><code>[mysqld]
# innodb_force_recovery=1
# innodb_purge_thread=0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启数据库</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; service mysqld restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-5-恢复数据" tabindex="-1"><a class="header-anchor" href="#_2-5-恢复数据" aria-hidden="true">#</a> 2.5 恢复数据</h2><p>登陆到数据库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>利用<code>source</code>命令恢复数据，以我的<strong>sm_sma_third</strong>库为例</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>mysql&gt; create database sm_sma_third;
mysql&gt; source /home/sma/backup/sm_sma_third_20210903.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>等待恢复完成，重新对用户进行授权即可。</p>`,33),i=[r];function l(c,t){return e(),s("div",null,i)}const m=a(d,[["render",l],["__file","mariadb-recovery.html.vue"]]);export{m as default};
